{"version":3,"sources":["_actions/user_actions.js","_actions/types.js","components/Config.js","hoc/auth.js","components/views/LandingPage/Sections/MainImage.js","components/views/LandingPage/LandingPage.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["auth","type","payload","axios","get","then","response","data","SpecificComponent","option","adminRoute","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","isAuth","isAdmin","history","push","MainImage","style","background","image","height","backgroundSize","backgroundPosition","width","position","maxWidth","bottom","marginLeft","color","title","fontSize","text","LandingPage","useState","setMovies","MainMovieImage","setMainMovieImage","endpoint","fetch","json","reaults","results","margin","backdrop_path","original_title","overview","display","justifyContent","Title","Typography","withRouter","rememberMeChecked","localStorage","getItem","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialEmail","initialValues","email","password","validationSchema","Yup","shape","required","min","onSubmit","values","setSubmitting","setTimeout","dataToSubmit","post","loginUser","loginSuccess","window","setItem","userId","id","removeItem","catch","err","touched","errors","isSubmitting","dirty","handleChange","handleBlur","handleSubmit","handleReset","className","level","Item","prefix","placeholder","value","onChange","onBlur","border","padding","borderRadius","checked","href","float","htmlType","minWidth","disabled","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterPage","lastName","name","confirmPassword","oneOf","lastname","moment","unix","registerUser","success","alert","errmsg","label","hasFeedback","validateStatus","onClick","SubMenu","Menu","MenuItemGroup","ItemGroup","LeftMenu","mode","key","userData","status","NavBar","visible","setVisible","zIndex","placement","closable","onClose","Footer","flexDirection","alignItems","App","fallback","paddingTop","minHeight","exact","path","component","Auth","LoginPage","Boolean","location","hostname","match","rootReducer","combineReducers","action","register","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f38c8d22.chunk.js","sourcesContent":["import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'http://api.themoviedb.org/3/';\nexport const API_KEY = '0e87e6a62d64d5ee133c910aae019ec7';\nexport const IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import { PromiseProvider } from 'mongoose';\nimport React from 'react';\n\nfunction MainImage(props) {\n    return (\n        <div style={{ background: `linear-gradient(to bottom, rgba(0,0,0,0)\n        39%,rgba(0,0,0,0)\n        41%,rgba(0,0,0,0.65)\n        100%),\n        url('${props.image}'), #1c1c1c`,\n            height: '500px',\n            backgroundSize: '100%, cover',\n            backgroundPosition:'center, center',\n            width: '100%',\n            position: 'relative'\n        }}>\n            <div>\n                <div style={{ position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem'}}> // 메인 이미지\n                    <h2 style={{color: 'white'}}>{props.title}</h2> // 영화 제목\n                    <p style={{ color: 'white', fontSize: '1rem'}}>{props.text}</p> // 영화 내용\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MainImage","// import { response } from 'express';\nimport React, { useEffect, useState } from 'react'\nimport { FaCode } from \"react-icons/fa\";\nimport {API_URL, API_KEY, IMAGE_BASE_URL} from '../../Config'; // API키 가져오기\nimport MainImage from './Sections/MainImage';\n\nfunction LandingPage() {\n\n    const [Movies, setMovies] = useState([])\n    const [MainMovieImage, setMainMovieImage] = useState(null)\n\n    useEffect(() => {\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n\n        fetch(endpoint)\n        .then(response => response.json())\n        .then(response => {\n            setMovies([response.reaults])\n            setMainMovieImage(response.results[0])\n        })\n\n    }, [])\n\n    return (\n        <div style={{ width: '100%', margin: '0'}}>\n\n            {/* Main Image */}\n            {MainMovieImage && // 이미지가 있으면 안에 내용을 처리해라\n                <MainImage image={`${IMAGE_BASE_URL}w1280${MainMovieImage.backdrop_path}`}\n                title={MainMovieImage.original_title}\n                text={MainMovieImage.overview}\n                />\n            }\n\n            <div style={{ width: '85%', margin: '1rem auto'}}>\n\n                <h2>최근 영화</h2>\n                <hr/>\n\n                {/* Movie Grid Cards */}\n\n            </div>\n\n            <div style={{ display: 'flex', justifyContent: 'center'}}>\n                <button>더 보기</button>\n            </div>\n\n        </div>\n    )\n}\n\nexport default LandingPage","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Icon, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","import React from 'react';\nimport { Menu } from 'antd';\nconst SubMenu = Menu.SubMenu;\nconst MenuItemGroup = Menu.ItemGroup;\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n    <Menu.Item key=\"mail\">\n      <a href=\"/\">Home</a>\n    </Menu.Item>\n    <SubMenu title={<span>Blogs</span>}>\n      <MenuItemGroup title=\"Item 1\">\n        <Menu.Item key=\"setting:1\">Option 1</Menu.Item>\n        <Menu.Item key=\"setting:2\">Option 2</Menu.Item>\n      </MenuItemGroup>\n      <MenuItemGroup title=\"Item 2\">\n        <Menu.Item key=\"setting:3\">Option 3</Menu.Item>\n        <Menu.Item key=\"setting:4\">Option 4</Menu.Item>\n      </MenuItemGroup>\n    </SubMenu>\n  </Menu>\n  )\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nfunction RightMenu(props) {\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">Signin</a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">Signup</a>\n        </Menu.Item>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}>Logout</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);\n\n","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { Drawer, Button, Icon } from 'antd';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 5, width: '100%' }}>\n      <div className=\"menu__logo\">\n        <a href=\"/\">Logo</a>\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_rigth\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <Icon type=\"align-right\" />\n        </Button>\n        <Drawer\n          title=\"Basic Drawer\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\nimport {Icon} from 'antd';\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', display: 'flex',\n            flexDirection: 'column', alignItems: 'center',\n            justifyContent: 'center', fontSize:'1rem'\n        }}>\n           <p> Happy Coding  <Icon type=\"smile\" /></p>\n        </div>\n    )\n}\n\nexport default Footer\n","import React, { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\"\n\n//null   Anyone Can go inside\n//true   only logged in user can go inside\n//false  logged in user can't go inside\n\nfunction App() {\n  return (\n    <Suspense fallback={(<div>Loading...</div>)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LandingPage, null)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}